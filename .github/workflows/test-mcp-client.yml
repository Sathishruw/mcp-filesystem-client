# .github/workflows/test-mcp-client.yml
name: Test MCP Client

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastmcp asyncio
        # Add any other dependencies your project needs

    - name: Test server startup
      run: |
        # Test if the server can start
        timeout 10s python3 filesystem_server.py &
        SERVER_PID=$!
        sleep 2
        
        # Check if process is still running
        if kill -0 $SERVER_PID 2>/dev/null; then
          echo "✅ Server started successfully"
          kill $SERVER_PID
        else
          echo "❌ Server failed to start"
          exit 1
        fi

    - name: Test client connection
      run: |
        # Run a basic client test
        python3 -c "
import asyncio
import sys
sys.path.append('.')
from fastmcp_client import FastMCPClient

async def test():
    client = FastMCPClient(['python3', 'filesystem_server.py'])
    try:
        await client.start()
        await client.initialize()
        
        # Test basic functionality
        result = await client.call_tool('get_working_directory')
        print('✅ Client connection test passed')
        print(f'Working directory: {result}')
        
        # Test file listing
        result = await client.call_tool('list_files', {'directory': '.'})
        print('✅ File listing test passed')

    except Exception as e:
        print(f'❌ Test failed: {e}')
        sys.exit(1)
    finally:
        await client.close()

asyncio.run(test())
"

  test-multiple-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastmcp

    - name: Test client
      run: |
        python3 fastmcp_client.py

  test-cross-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastmcp

    - name: Test on ${{ matrix.os }}
      run: python3 fastmcp_client.py