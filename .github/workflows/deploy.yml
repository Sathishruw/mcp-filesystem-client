# .github/workflows/deploy.yml
name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Run tests before build
      run: |
        pip install fastmcp
        python3 integration_test.py

    - name: Create package
      run: |
        # Create setup.py for packaging
        cat > setup.py << 'EOF'
from setuptools import setup, find_packages

setup(
    name="mcp-filesystem-client",
    version="1.0.0",
    author="Your Name",
    author_email="your.email@example.com",
    description="FastMCP client for filesystem operations",
    long_description=open("README.md").read(),
    long_description_content_type="text/markdown",
    url="https://github.com/Sathishruw/mcp-filesystem-client/",
    py_modules=["fastmcp_client"],
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
    python_requires=">=3.7",
    install_requires=[
        "fastmcp",
    ],
    entry_points={
        "console_scripts": [
            "mcp-client=fastmcp_client:main",
        ],
    },
)
EOF
        
        python -m build
    
    - name: Upload to PyPI (optional)
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/

  docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        cat > Dockerfile << 'EOF'
FROM python:3.10-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 8000

CMD ["python3", "fastmcp_client.py", "interactive"]
EOF
        
        cat > requirements.txt << 'EOF'
fastmcp
asyncio
EOF
        
        docker build -t mcp-filesystem-client .

    - name: Test Docker image
      run: |
        # Run a quick test
        docker run --rm mcp-filesystem-client python3 -c "import fastmcp_client; print('âœ… Import successful')"